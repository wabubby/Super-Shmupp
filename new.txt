using UnityEngine;

public class PhysicsController : RaycastController {

    public Vector2 velocity;
    public LayerMask Mask;
    public CollisionInfo cInfo;

    private Vector2 deltaS; // the change in position this frame

    public void Move()
    {
        cInfo.Reset();

        cInfo.faceDirection.x = Mathf.Sign(velocity.x);
        cInfo.faceDirection.y = Mathf.Sign(velocity.y);


        deltaS = velocity * Time.deltaTime;
        VerticalCollision();

        transform.position += (Vector3) deltaS;
    }

    private void VerticalCollision() {
        for (int i = 0; i < rayCount; i++){
            Vector2 rayOrigin = (Vector2) transform.position + raypoints.down[i];
            float rayLengthY = Mathf.Abs(deltaS.y) + skinWidth;

            RaycastHit2D hit = Physics2D.Raycast(rayOrigin, Vector2.down, rayLengthY, Mask);

            if (hit) {
                // the actual velocity must be converted BACK.
                deltaS.y = -(hit.distance-skinWidth);
            }

            Debug.DrawRay(rayOrigin, Vector2.down*rayLengthY, Color.red);
        }
    }
    private void HorizontalCollision() {

    }
    public void LateUpdate() { Move(); }

    public struct CollisionInfo{
        public bool above, below;
        public bool left, right;
        public Vector2 faceDirection;
        public void Reset(){
            above = below = left = right = false;
            faceDirection = Vector2.right;
        }
    }

}

